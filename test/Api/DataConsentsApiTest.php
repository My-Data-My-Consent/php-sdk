<?php
/**
 * DataConsentsApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  MyDataMyConsent
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * My Data My Consent - Developer API
 *
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace MyDataMyConsent\Test\Api;

use \MyDataMyConsent\Configuration;
use \MyDataMyConsent\ApiException;
use \MyDataMyConsent\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DataConsentsApiTest Class Doc Comment
 *
 * @category Class
 * @package  MyDataMyConsent
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DataConsentsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for v1ConsentsConsentIdAccountsAccountIdGet
     *
     * Get consented financial account details..
     *
     */
    public function testV1ConsentsConsentIdAccountsAccountIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ConsentsConsentIdAccountsAccountIdInsightsGet
     *
     * Get consented financial account insights..
     *
     */
    public function testV1ConsentsConsentIdAccountsAccountIdInsightsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ConsentsConsentIdAccountsAccountIdTransactionsGet
     *
     * Get consented financial account transactions..
     *
     */
    public function testV1ConsentsConsentIdAccountsAccountIdTransactionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ConsentsConsentIdAccountsGet
     *
     * Get all accounts in a consent..
     *
     */
    public function testV1ConsentsConsentIdAccountsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ConsentsConsentIdDocumentsDocumentIdAnalysisGet
     *
     * Get analysis of a consented document..
     *
     */
    public function testV1ConsentsConsentIdDocumentsDocumentIdAnalysisGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ConsentsConsentIdDocumentsDocumentIdDownloadGet
     *
     * Download a consented document..
     *
     */
    public function testV1ConsentsConsentIdDocumentsDocumentIdDownloadGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ConsentsConsentIdDocumentsDocumentIdGet
     *
     * Get consented document details..
     *
     */
    public function testV1ConsentsConsentIdDocumentsDocumentIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ConsentsConsentIdDocumentsGet
     *
     * Get all documents in a consent..
     *
     */
    public function testV1ConsentsConsentIdDocumentsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ConsentsConsentIdGet
     *
     * Get consent details by consent id..
     *
     */
    public function testV1ConsentsConsentIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v1ConsentsGet
     *
     * Get all consents filtered by status and time..
     *
     */
    public function testV1ConsentsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
